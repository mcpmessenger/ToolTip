version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Installing dependencies..."
        - npm ci
    build:
      commands:
        - echo "Installing backend dependencies..."
        - cd backend && npm ci && cd ..
        - echo "Building frontend..."
        - npm run build
        - echo "Building backend..."
        - cd backend && npm run build && cd ..
        - echo "Creating deployment structure..."
        - mkdir -p dist/backend
        - cp -r backend/dist/* dist/backend/
        - cp backend/package.json dist/backend/
        - cp -r backend/node_modules dist/backend/ 2>/dev/null || echo "Backend node_modules not found"
        - echo "Creating server.js..."
        - cat > dist/server.js << 'EOF'
        - const express = require('express');
        - const path = require('path');
        - const cors = require('cors');
        - const app = express();
        - const PORT = process.env.PORT || 3001;
        - app.use(cors());
        - app.use(express.json());
        - app.use(express.static(path.join(__dirname)));
        - try {
        -   const backendRoutes = require('./backend/index.js');
        -   app.use('/api', backendRoutes);
        -   console.log('Backend routes loaded successfully');
        - } catch (error) {
        -   console.error('Failed to load backend routes:', error.message);
        -   app.get('/api/health', (req, res) => {
        -     res.json({ status: 'ok', message: 'Backend not available - using fallback', timestamp: new Date().toISOString() });
        -   });
        -   app.post('/api/chat', (req, res) => {
        -     res.json({ message: 'AI chat service not available - backend not deployed', type: 'fallback' });
        -   });
        -   app.post('/api/crawl', (req, res) => {
        -     res.json({ message: 'Crawl service not available - backend not deployed', type: 'fallback' });
        -   });
        - }
        - app.get('*', (req, res) => {
        -   res.sendFile(path.join(__dirname, 'index.html'));
        - });
        - app.listen(PORT, () => {
        -   console.log(`Server is running on port ${PORT}`);
        -   console.log(`Frontend: http://localhost:${PORT}`);
        -   console.log(`API: http://localhost:${PORT}/api`);
        - });
        - EOF
    postBuild:
      commands:
        - echo "Build completed successfully"
  artifacts:
    baseDirectory: dist
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - backend/node_modules/**/*